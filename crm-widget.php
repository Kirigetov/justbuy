<?php
 namespace crm\middleware; use Exception; class Proxy { private $resourceUrl = 'http://crm-middleware.mcemcw.com'; private $settings = []; public function setResourceUrl($resourceUrl) { $this->resourceUrl = rtrim($resourceUrl, '/'); return $this; } private function getRoute() { if (isset($_GET['r'])) { $route = urldecode($_GET['r']); parse_str(parse_url($route, PHP_URL_QUERY), $out); $_GET = array_merge($out, $_GET); return parse_url($route, PHP_URL_PATH) . ($_GET ? '?' . http_build_query($_GET) : ''); } else { if (strpos($_SERVER['REQUEST_URI'], $_SERVER['SCRIPT_NAME']) === 0) { return '/?' . http_build_query($_GET); } return $_SERVER['REQUEST_URI']; } } public function run() { $url = $this->resourceUrl . $this->getRoute(); $ch = curl_init($url); curl_setopt($ch, CURLOPT_HEADER, true); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0); curl_setopt($ch, CURLOPT_COOKIE, http_build_query($_COOKIE, null, ';')); curl_setopt($ch, CURLOPT_HTTPHEADER, $this->getHeaders()); if (strtoupper($_SERVER['REQUEST_METHOD']) == 'POST') { curl_setopt($ch, CURLOPT_POST, true); if ($postData = $this->getPostData()) { curl_setopt($ch, CURLOPT_POSTFIELDS, $postData); } } $response = curl_exec($ch); if ($response === false) { $this->logError(date('Y-m-d H:i:s: ') . curl_error($ch) . PHP_EOL); curl_close($ch); exit; } else { curl_close($ch); } $split = explode("\r\n\r\n", $response, 2); $headers = explode("\r\n", $split[0]); $content = isset($split[1]) ? $split[1] : ''; foreach ($headers as $header) { header($header, false); } echo $content; } private function getIP() { $ip = null; if (!empty($_SERVER['HTTP_CLIENT_IP'])) { $ip = $_SERVER['HTTP_CLIENT_IP']; } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) { $ip = $_SERVER['HTTP_X_FORWARDED_FOR']; } else { $ip = $_SERVER['REMOTE_ADDR']; } return $ip; } private function getHeaders() { $headers = [ 'Host-Proxy: ' . (isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : null), 'Host-Proxy-User-Ip: ' . $this->getIP(), 'Proxy-Script-Name: ' . $_SERVER['SCRIPT_NAME'], 'Proxy-Settings: ' . json_encode($this->settings), 'Proxy-Server: ' . json_encode($_SERVER), 'Cache-Control: no-cache', 'Server-API-Mode: CRM' ]; $isAjax = isset($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest'; if ($isAjax) { $headers[] = "X-Requested-With: XMLHttpRequest"; } return $headers; } private function getPostData() { $postData = $this->preparePostData($_POST); if ($_FILES) { foreach ($_FILES as $key => $value) { if (is_array($value['name'])) { foreach ($value['name'] as $i => $v) { if (empty($value['name'][$i])) { continue; } $postData["{$key}[$i]"] = $this->getCURLFile( $value['tmp_name'][$i], $value['type'][$i], $value['name'][$i] ); } } elseif ($value['name']) { $postData[$key] = $this->getCURLFile($value['tmp_name'], $value['type'], $value['name']); } } } return $postData; } private function preparePostData($post, $prefix = null) { static $result = []; foreach ($post as $k => $v) { $newKey = $prefix ? $prefix . "[$k]" : $k; if (is_array($v)) { $this->preparePostData($v, $newKey); } else { $result[$newKey] = $v; } } return $result; } private function getCURLFile($tempName, $type, $fileName) { if (function_exists('curl_file_create')) { return curl_file_create($tempName, $type, $fileName); } else { return "@{$tempName};type={$type};filename={$fileName}"; } } public function setSettings($settings) { $this->settings = $settings; return $this; } private function logError($error) { $logFile = rtrim(sys_get_temp_dir(), '/') . '/crm-proxy.log'; @file_put_contents($logFile, $error, FILE_APPEND | LOCK_EX); } } (new \crm\middleware\Proxy())->setResourceUrl("https://crm-middleware.mcemcw.com")->setSettings([ "ofApiKey" => "74b778c6e2e99c8704791005652e2a87", "trackApiKey" => "1458cb17d59126fe69e75552d727a5a2", "urlAliases" => [ "@form" => "/order", "@preview" => "/preview" ] ])->run();